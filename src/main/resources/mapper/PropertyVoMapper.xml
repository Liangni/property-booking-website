<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.penny.dao.PropertyVoMapper">
    <resultMap id="BaseResultMap" type="com.penny.vo.PropertyVo">
        <id column="property_id" jdbcType="BIGINT" property="propertyId"/>
        <result column="property_title" jdbcType="VARCHAR" property="propertyTitle"/>
        <result column="property_description" jdbcType="VARCHAR" property="propertyDescription"/>
        <result column="max_num_of_guests" jdbcType="INTEGER" property="maxNumOfGuests"/>
        <result column="num_of_bedrooms" jdbcType="INTEGER" property="numOfBedrooms"/>
        <result column="num_of_beds" jdbcType="INTEGER" property="numOfBeds"/>
        <result column="num_of_bathrooms" jdbcType="INTEGER" property="numOfBathrooms"/>
        <result column="price_on_weekdays" jdbcType="BIGINT" property="priceOnWeekdays"/>
        <result column="price_on_weekends" jdbcType="BIGINT" property="priceOnWeekends"/>
        <result column="is_published" jdbcType="BIT" property="isPublished"/>
        <result column="average_rating" jdbcType="DOUBLE" property="averageRating"/>
        <result column="property_main_sub_type_id" jdbcType="BIGINT" property="propertyMainSubTypeId"/>
        <result column="property_share_type_id" jdbcType="BIGINT" property="propertyShareTypeId"/>
        <result column="address_id" jdbcType="BIGINT" property="addressId"/>
        <result column="host_id" jdbcType="BIGINT" property="hostId"/>
        <result column="street" jdbcType="VARCHAR" property="street"/>
        <result column="apartment_floor" jdbcType="VARCHAR" property="apartmentFloor"/>
        <result column="district_id" jdbcType="BIGINT" property="districtId"/>
        <result column="district_name" jdbcType="BIGINT" property="districtName"/>
        <result column="parent_district_id" jdbcType="BIGINT" property="parentDistrictId"/>
        <result column="parent_district_name" jdbcType="BIGINT" property="parentDistrictName"/>
        <result column="start_available_date" jdbcType="DATE" property="startAvailableDate"/>
        <result column="end_available_date" jdbcType="DATE" property="endAvailableDate"/>
    </resultMap>

    <sql id="Base_Column_List">
        property_id, property_title, property_description, max_num_of_guests, num_of_bedrooms,
    num_of_beds, num_of_bathrooms, price_on_weekdays, price_on_weekends, is_published,
    average_rating, property_main_sub_type_id, property_share_type_id, address_id, host_id
    </sql>

    <sql id="join_district_table">
        select
            d1.district_id   as parent_district_id,
            d1.district_name as parent_district_name,
            d2.district_id   as district_id,
            d2.district_name as district_name
        from
            district as d1
            left join
            district d2 on d1.district_id = d2.parent_district_id
    </sql>

    <select id="listByNumOfAvailableDays" parameterType="com.penny.request.SearchPropertyRequestDTO" resultMap="BaseResultMap">
        <bind name="numOfAvailableDaysString" value="numOfAvailableDays + ' day'" />
        with calendar as (
            select generate_series(
                CURRENT_DATE,
                CURRENT_DATE + interval '1 year' - interval '1 day',
                interval '1 day'
            ) as date
        ),
        property_calendar as (
            select
                p.property_id,
                c.date
            from
                property p
                CROSS JOIN
                calendar c
        ),
        booking_calendar_with_status as (
            select
                pc.property_id,
                pc.date,
                case when bc.booking_calendar_id IS NOT NULL THEN true ELSE false END as is_booked
            from
                property_calendar pc
                left join
                booking_calendar bc ON pc.property_id = bc.property_id AND pc.date = bc.booking_date
        )
        ,available_periods as (
            -- 對 booking_calendar_with_status 表進行查詢，選擇房源ID、可預訂日期以及計算其所在的連續可預定天數（consecutive_available_days）
            select
            property_id,
            date,
            -- 將子查詢結果按照房源ID及連續可預定期間的分組標籤分組，並計算每個房源在每個 available_period_batch_tag 的連續可用日期數量。
            count(*) over (partition by property_id, available_period_batch_tag) as consecutive_available_days
        from
            (
                -- 子查詢：計算每個房源的連續可預定天數分組
                select
                    property_id,
                    date,
                    -- 將可預定日期按照房源ID分組，並按照日期排序，為每個日期分配一個行號（nth_available_day）
                    row_number() over (partition by property_id order by date) as nth_available_day,
                    -- 將可預定日期減去行號乘以一天的時間間隔，以生成連續可預定期間的分組標識（available_period_batch_tag）
                    date - row_number() over (partition by property_id order by date) * interval '1 DAY' as available_period_batch_tag
                from
                    booking_calendar_with_status
                where
                    is_booked = false
            ) as subquery
        ),
        join_district as (
            <include refid="join_district_table"/>
        )
        select
            pr.*,
            ad.*,
            jd.*,
            min(ap.date) as start_available_date,
            min(ap.date) + interval '${numOfAvailableDays} day' as end_available_date
        from
            property as pr
            inner join
            available_periods as ap on ap.property_id = pr.property_id
            left join
            address as ad on pr.address_id = ad.address_id
            left join
            join_district as jd on ad.admin_area_level_3_district_id = jd.district_id
        <where>
            ap.consecutive_available_days >= #{numOfAvailableDays}
            <if test="numOfGuests != null">
                and pr.max_num_of_guests >= #{numOfGuests}
            </if>
            <if test="numOfBedrooms != null">
                and pr.num_of_bedrooms >= #{numOfBedrooms}
            </if>
            <if test="numOfBeds != null">
                and pr.num_of_beds >= #{numOfBeds}
            </if>
            <if test="numOfBathrooms != null">
                and pr.num_of_bathrooms >= #{numOfBathrooms}
            </if>
            <if test="maxPrice != null">
                and #{maxPrice} >= pr.price_on_weekdays
                and #{maxPrice} >= pr.price_on_weekends
            </if>
            <if test="minPrice != null">
                and pr.price_on_weekdays >= #{minPrice}
                and pr.price_on_weekends >= #{minPrice}
            </if>
            <if test = "propertyMainTypeId != null">
                and pr.property_main_type_id in (
                select
                property_main_type_id
                from
                property_main_type
                where property_group_id = # {propertyMainTypeId}
                )
            </if>
            <if test = "propertyShareTypeId != null">
                and pr.property_share_type_id = #{propertyShareTypeId}
            </if>
            <if test = "amenityIds != null">
                and pr.property_id in (
                select
                property_id
                from
                property_amenity
                where
                amenity_id in
                <foreach collection="amenityIds" item="amenityId" open="(" separator="," close=")">
                    #{amenityId}
                </foreach>
                )
            </if>
            <if test="districtId != null">
                and (
                ad.admin_area_level_3_district_id = #{districtId}
                or jd.parent_district_id = #{districtId}
                )
            </if>
        </where>
        group by
        pr.property_id,
        ad.address_id,
        jd.parent_district_id,
        jd.parent_district_name,
        jd.district_id,
        jd.district_name
    </select>

    <select id="listByStartAndEndAvailableDate" parameterType="com.penny.request.SearchPropertyRequestDTO" resultMap="BaseResultMap">
        with join_district as (
        <include refid="join_district_table"/>
        )
        select
        pr.*,
        ad.*,
        jd.*,
        #{startAvailableDate} as start_available_date,
        #{endAvailableDate} as end_available_date
        from
        property as pr
        left join
        address as ad on pr.address_id = ad.address_id
        left join
        join_district as jd on ad.admin_area_level_3_district_id = jd.district_id
        left join
        booking_calendar as b on pr.property_id = b.property_id
        and b.booking_date between #{startAvailableDate} and  #{endAvailableDate}
        <where>
            b.booking_calendar_id is null
            <if test="numOfGuests != null">
                and pr.max_num_of_guests >= #{numOfGuests}
            </if>
            <if test="numOfBedrooms != null">
                and pr.num_of_bedrooms >= #{numOfBedrooms}
            </if>
            <if test="numOfBeds != null">
                and pr.num_of_beds >= #{numOfBeds}
            </if>
            <if test="numOfBathrooms != null">
                and pr.num_of_bathrooms >= #{numOfBathrooms}
            </if>
            <if test="maxPrice != null">
                and #{maxPrice} >= pr.price_on_weekdays
                and #{maxPrice} >= pr.price_on_weekends
            </if>
            <if test="minPrice != null">
                and pr.price_on_weekdays >= #{minPrice}
                and pr.price_on_weekends >= #{minPrice}
            </if>
            <if test = "propertyMainTypeId != null">
                and pr.property_main_type_id in (
                select
                property_main_type_id
                from
                property_main_type
                where property_group_id = # {propertyMainTypeId}
                )
            </if>
            <if test = "propertyShareTypeId != null">
                and pr.property_share_type_id = #{propertyShareTypeId}
            </if>
            <if test = "amenityIds != null">
                and pr.property_id in (
                select
                property_id
                from
                property_amenity
                where
                amenity_id in
                <foreach collection="amenityIds" item="amenityId" open="(" separator="," close=")">
                    #{amenityId}
                </foreach>
                )
            </if>
            <if test="districtId != null">
                and (
                ad.admin_area_level_3_district_id = #{districtId}
                or jd.parent_district_id = #{districtId}
                )
            </if>
        </where>
    </select>

    <select id="listByPropertyAttributes" parameterType="com.penny.request.SearchPropertyRequestDTO" resultMap="BaseResultMap">
        with join_district as (
        <include refid="join_district_table"/>
        )
        select
            pr.*,
            ad.*,
            jd.*
        from
            property as pr
            left join
            address as ad on pr.address_id = ad.address_id
            left join
            join_district as jd on ad.admin_area_level_3_district_id = jd.district_id
        <trim prefix="where" prefixOverrides="and |or ">
            <if test="numOfGuests != null">
                pr.max_num_of_guests >= #{numOfGuests}
            </if>
            <if test="numOfBedrooms != null">
                and pr.num_of_bedrooms >= #{numOfBedrooms}
            </if>
            <if test="numOfBeds != null">
                and pr.num_of_beds >= #{numOfBeds}
            </if>
            <if test="numOfBathrooms != null">
                and pr.num_of_bathrooms >= #{numOfBathrooms}
            </if>
            <if test="maxPrice != null">
                and #{maxPrice} >= pr.price_on_weekdays
                and #{maxPrice} >= pr.price_on_weekends
            </if>
            <if test="minPrice != null">
                and pr.price_on_weekdays >= #{minPrice}
                and pr.price_on_weekends >= #{minPrice}
            </if>
            <if test = "propertyMainTypeId != null">
                and pr.property_main_type_id in (
                select
                property_main_type_id
                from
                property_main_type
                where
                property_group_id = # {propertyMainTypeId}
                )
            </if>
            <if test = "propertyShareTypeId != null">
                and pr.property_share_type_id = #{propertyShareTypeId}
            </if>
            <if test = "amenityIds != null">
                and pr.property_id in (
                select
                property_id
                from
                property_amenity
                where
                amenity_id in
                <foreach collection="amenityIds" item="amenityId" open="(" separator="," close=")">
                    #{amenityId}
                </foreach>
                )
            </if>
            <if test="districtId != null">
                and (
                ad.admin_area_level_3_district_id = #{districtId}
                or jd.parent_district_id = #{districtId}
                )
            </if>
        </trim>
    </select>

    <select id="listByHostId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        with join_district as (
        <include refid="join_district_table"/>
        )
        select
         pr.*,
         ad.*,
         jd.*
        from
            property as pr
            left join
            address as ad on pr.address_id = ad.address_id
            left join
            join_district as jd on ad.admin_area_level_3_district_id = jd.district_id
        where host_id = #{ecUserId,jdbcType=BIGINT}
    </select>

</mapper>